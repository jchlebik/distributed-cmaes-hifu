Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.1.144 Build 20181018

Compiler options: -std=c++11 -O3 -mkl -ffast-math -xhost -qopenmp-simd -qopenmp -lpthread -xhost -g -qopt-report=5 -qopt-report-phase=vec,par -vecabi=cmdtarget -o hifu_test

Begin optimization report for: gaussianDistribution(std::vector<float, std::allocator<float>> *, float, float, float, float, float)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at FitnessFunc/HIFUScore/getHeatSource.cc(46,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: getHeatSource(std::vector<float, std::allocator<float>> *, unsigned int, unsigned int, unsigned int, unsigned int, float, float)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at FitnessFunc/HIFUScore/getHeatSource.cc(46,3) inlined into FitnessFunc/HIFUScore/getHeatSource.cc(81,31)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/getHeatSource.cc(46,3) inlined into FitnessFunc/HIFUScore/getHeatSource.cc(82,31)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/getHeatSource.cc(87,43)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/getHeatSource.cc(87,43)
      remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 4.360 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/getHeatSource.cc(87,43)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/getHeatSource.cc(93,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at FitnessFunc/HIFUScore/getHeatSource.cc(97,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at FitnessFunc/HIFUScore/getHeatSource.cc(97,5)
      remark #15389: vectorization support: reference at (99:17) has unaligned access   [ FitnessFunc/HIFUScore/getHeatSource.cc(99,17) ]
      remark #15389: vectorization support: reference gaussY.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[col] has unaligned access   [ FitnessFunc/HIFUScore/getHeatSource.cc(99,70) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 1.167
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 9 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 7.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at FitnessFunc/HIFUScore/getHeatSource.cc(97,5)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference at (99:17) has unaligned access   [ FitnessFunc/HIFUScore/getHeatSource.cc(99,17) ]
      remark #15389: vectorization support: reference gaussY.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[col] has unaligned access   [ FitnessFunc/HIFUScore/getHeatSource.cc(99,70) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 1.700
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 9 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 7.980 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at FitnessFunc/HIFUScore/getHeatSource.cc(97,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<float, std::allocator<float>>::pointer, std::vector<float, std::allocator<float>>::size_type, std::iterator_traits<std::_Vector_base<float, std::allocator<float>>::pointer>::value_type>(std::_Vector_base<float, std::allocator<float>>::pointer, std::vector<float, std::allocator<float>>::size_type, const std::iterator_traits<std::_Vector_base<float, std::allocator<float>>::pointer>::value_type &)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 6.410 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.143
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 6.410 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================
