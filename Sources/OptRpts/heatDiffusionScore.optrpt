Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.1.144 Build 20181018

Compiler options: -std=c++11 -O3 -mkl -ffast-math -xhost -qopenmp-simd -qopenmp -lpthread -xhost -g -qopt-report=5 -qopt-report-phase=vec,par -vecabi=cmdtarget -o hifu_test

Begin optimization report for: fitnessFunction(unsigned int, float *)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(49,3)
   remark #26015: Exception can be thrown by the call to Sonication::Sonication(Sonication *, float, float, float, float, float)   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(62,9) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(62,9) ]
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(111,3)
   remark #26015: Exception can be thrown by the call to getHeatSource(std::vector<float, std::allocator<float>> *, unsigned int, unsigned int, unsigned int, unsigned int, float, float)   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(113,22) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(113,22) ]
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(122,3)
   remark #26015: Exception can be thrown by the call to std::vector<float, std::allocator<float>>::operator=(std::vector<float, std::allocator<float>> *, const std::vector<float, std::allocator<float>> &)   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(129,18) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(129,18) ]
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(107,4) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(153,3)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/ext/new_allocator.h(125,2) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: std::vector<Sonication, std::allocator<Sonication>>::_M_realloc_insert<std::remove_reference<std::vector<Sonication, std::allocator<Sonication>>::value_type &>::type>(std::vector<Sonication, std::allocator<Sonication>> *, std::vector<Sonication, std::allocator<Sonication>>::iterator, std::remove_reference<std::vector<Sonication, std::allocator<Sonication>>::value_type &>::type &&)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/ext/new_allocator.h(136,27) inlined into /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/vector.tcc(437,4)
   remark #15389: vectorization support: reference __p[_2] has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/ext/new_allocator.h(136,4) ]
   remark #15389: vectorization support: reference __args[_2] has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.750
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 1.310 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/ext/new_allocator.h(136,27) inlined into /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/vector.tcc(437,4)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_uninitialized.h(82,23) inlined into /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/vector.tcc(447,8)
<Multiversioned v1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <__cur->xPos>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__cur->xPos>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__first._M_current->xPos>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <__cur->yPos>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__cur->yPos>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__first._M_current->yPos>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <__cur->timeOn>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__cur->timeOn>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__first._M_current->timeOn>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <__cur->timeOff>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__cur->timeOff>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__first._M_current->timeOff>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <__cur->dT>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__cur->dT>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__first._M_current->dT>, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.005
   remark #15452: unmasked strided loads: 10 
   remark #15453: unmasked strided stores: 5 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 19 
   remark #15477: vector cost: 50.500 
   remark #15478: estimated potential speedup: 0.370 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_uninitialized.h(82,23) inlined into /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/vector.tcc(447,8)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_uninitialized.h(82,23) inlined into /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/vector.tcc(454,8)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <__cur->xPos>, masked, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__first._M_current->xPos>, masked, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <__cur->yPos>, masked, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__first._M_current->yPos>, masked, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <__cur->timeOn>, masked, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__first._M_current->timeOn>, masked, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <__cur->timeOff>, masked, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__first._M_current->timeOff>, masked, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <__cur->dT>, masked, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,7) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <__first._M_current->dT>, masked, stride is 5   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.003
   remark #15460: masked strided loads: 5 
   remark #15462: unmasked indexed (or gather) loads: 5 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 19 
   remark #15477: vector cost: 175.500 
   remark #15478: estimated potential speedup: 0.100 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<float, std::allocator<float>>, std::allocator<std::vector<float, std::allocator<float>>>>::~vector(std::vector<std::vector<float, std::allocator<float>>, std::allocator<std::vector<float, std::allocator<float>>>> *)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(107,4) inlined into /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_vector.h(568,2)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/ext/new_allocator.h(125,2) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (285:2) and call:operator delete(void *) (125:2)
   remark #15346: vector dependence: assumed FLOW dependence between call:operator delete(void *) (125:2) and __first->_M_start (285:2)
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<float, std::allocator<float>>, std::allocator<std::vector<float, std::allocator<float>>>>::vector(std::vector<std::vector<float, std::allocator<float>>, std::allocator<std::vector<float, std::allocator<float>>>> *, std::vector<std::vector<float, std::allocator<float>>, std::allocator<std::vector<float, std::allocator<float>>>>::size_type, const std::vector<std::vector<float, std::allocator<float>>, std::allocator<std::vector<float, std::allocator<float>>>>::value_type &, const std::vector<std::vector<float, std::allocator<float>>, std::allocator<std::vector<float, std::allocator<float>>>>::allocator_type &)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_uninitialized.h(209,8) inlined into /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_vector.h(431,9)
   remark #26015: Exception can be thrown by the call to std::vector<float, std::allocator<float>>::vector(std::vector<float, std::allocator<float>> *, const std::vector<float, std::allocator<float>> &)   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(75,42) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<float, std::allocator<float>>::vector(std::vector<float, std::allocator<float>> *, std::vector<float, std::allocator<float>>::size_type, const std::vector<float, std::allocator<float>>::value_type &, const std::vector<float, std::allocator<float>>::allocator_type &)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_vector.h(431,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_vector.h(431,9)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.857
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 6.410 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.143
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 6.410 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_vector.h(431,9)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: _isInConstraints_blob(std::vector<float, std::allocator<float>> *)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(172,34)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.450 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(173,34)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.450 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(174,3)
   remark #15389: vectorization support: reference upperBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access
   remark #15388: vectorization support: reference upperBounds[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,13) ]
   remark #15389: vectorization support: reference lowerBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) ]
   remark #15388: vectorization support: reference lowerBounds[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(174,3)
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(178,3)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(178,34) ]
LOOP END
===========================================================================

Begin optimization report for: _isInConstraints_flower(std::vector<float, std::allocator<float>> *)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(212,34)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.450 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(213,34)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.450 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(214,3)
   remark #15389: vectorization support: reference upperBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access
   remark #15388: vectorization support: reference upperBounds[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,13) ]
   remark #15389: vectorization support: reference lowerBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) ]
   remark #15388: vectorization support: reference lowerBounds[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(214,3)
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(226,3)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(226,34) ]
LOOP END
===========================================================================

Begin optimization report for: _applyConstraints_blob(std::vector<float, std::allocator<float>> &)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(325,34)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.450 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(326,34)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.450 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(327,3)
   remark #15389: vectorization support: reference lowerBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) ]
   remark #15388: vectorization support: reference lowerBounds[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,13) ]
   remark #15389: vectorization support: reference upperBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access
   remark #15388: vectorization support: reference upperBounds[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,13) ]
   remark #15388: vectorization support: reference ranges[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(329,50) ]
   remark #15389: vectorization support: reference upperBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(329,33) ]
   remark #15389: vectorization support: reference lowerBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(329,50) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 5.250 
   remark #15478: estimated potential speedup: 1.810 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(327,3)
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(329,50)
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(368,55)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END


Non-optimizable loops:


LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(335,3)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

   LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(352,7)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(365,7)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(378,7)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: applyConstraints(std::vector<float, std::allocator<float>> &)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(539,3)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.450 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(539,3)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.450 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(539,3)
   remark #15389: vectorization support: reference lowerBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) ]
   remark #15388: vectorization support: reference lowerBounds[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,13) ]
   remark #15389: vectorization support: reference upperBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access
   remark #15388: vectorization support: reference upperBounds[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,13) ]
   remark #15388: vectorization support: reference ranges[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(406,50) ]
   remark #15389: vectorization support: reference upperBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(406,33) ]
   remark #15389: vectorization support: reference lowerBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(406,50) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 5.250 
   remark #15478: estimated potential speedup: 1.810 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(539,3)
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(406,50) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(539,3)
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(476,55) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(539,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END


Non-optimizable loops:


LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(418,3) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(539,3)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

   LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(459,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(539,3)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(473,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(539,3)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(487,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(539,3)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: _getConstraints_flower(unsigned int, std::vector<float, std::allocator<float>> &, std::vector<float, std::allocator<float>> &)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(550,3)
<Multiversioned v1>
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i+1]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(553,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i+2]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(554,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i+3]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(555,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i+1]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(558,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i+2]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(559,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i+3]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(560,7) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.050
   remark #15300: LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 8 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 28 
   remark #15477: vector cost: 20.000 
   remark #15478: estimated potential speedup: 1.390 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(550,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(550,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END
===========================================================================

Begin optimization report for: _getConstraints_blob(unsigned int, std::vector<float, std::allocator<float>> &, std::vector<float, std::allocator<float>> &)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(570,3)
<Multiversioned v1>
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(572,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(573,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i+1]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(575,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i+1]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(576,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i+2]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(578,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i+2]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(579,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i+3]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(581,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i+3]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(582,7) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.050
   remark #15300: LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 8 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 28 
   remark #15477: vector cost: 20.000 
   remark #15478: estimated potential speedup: 1.390 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(570,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(570,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END
===========================================================================

Begin optimization report for: getConstraints(unsigned int, std::vector<float, std::allocator<float>> &, std::vector<float, std::allocator<float>> &)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(550,3) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(597,3)
<Multiversioned v1>
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i+1]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(553,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i+2]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(554,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <uB->_M_start[i+3]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(555,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i+1]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(558,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i+2]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(559,7) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <lB->_M_start[i+3]>, stride is 4   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(560,7) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.050
   remark #15300: LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 8 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 28 
   remark #15477: vector cost: 20.000 
   remark #15478: estimated potential speedup: 1.390 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(550,3) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(597,3)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(550,3) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(597,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<float, std::allocator<float>>, std::allocator<std::vector<float, std::allocator<float>>>>::pointer>(std::_Vector_base<std::vector<float, std::allocator<float>>, std::allocator<std::vector<float, std::allocator<float>>>>::pointer, std::_Vector_base<std::vector<float, std::allocator<float>>, std::allocator<std::vector<float, std::allocator<float>>>>::pointer)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_construct.h(107,4)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/ext/new_allocator.h(125,2) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (285:2) and call:operator delete(void *) (125:2)
   remark #15346: vector dependence: assumed FLOW dependence between call:operator delete(void *) (125:2) and __first->_M_start (285:2)
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<float, std::allocator<float>>::pointer, std::vector<float, std::allocator<float>>::size_type, std::iterator_traits<std::_Vector_base<float, std::allocator<float>>::pointer>::value_type>(std::_Vector_base<float, std::allocator<float>>::pointer, std::vector<float, std::allocator<float>>::size_type, const std::iterator_traits<std::_Vector_base<float, std::allocator<float>>::pointer>::value_type &)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.714
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: _applyConstraints_flower(std::vector<float, std::allocator<float>> &)

    Report from: Vector & Auto-parallelization optimizations [vec, par]


LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(400,34)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.450 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(752,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(401,34)
   remark #15389: vectorization support: reference *__first has unaligned access   [ /apps/all/GCCcore/8.2.0/include/c++/8.2.0/bits/stl_algobase.h(754,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.750 
   remark #15478: estimated potential speedup: 1.450 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(402,3)
   remark #15389: vectorization support: reference lowerBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) ]
   remark #15388: vectorization support: reference lowerBounds[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,13) ]
   remark #15389: vectorization support: reference upperBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access
   remark #15388: vectorization support: reference upperBounds[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(552,13) ]
   remark #15388: vectorization support: reference ranges[_2] has aligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(406,50) ]
   remark #15389: vectorization support: reference upperBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(406,33) ]
   remark #15389: vectorization support: reference lowerBounds.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE.__b_St12_Vector_baseIfSaIfEE[_2] has unaligned access   [ FitnessFunc/HIFUScore/heatDiffusionScore.cc(406,50) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.571
   remark #15301: FUSED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 15 
   remark #15477: vector cost: 5.250 
   remark #15478: estimated potential speedup: 1.810 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(557,7) inlined into FitnessFunc/HIFUScore/heatDiffusionScore.cc(402,3)
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(406,50)
LOOP END

LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(476,55)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END


Non-optimizable loops:


LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(418,3)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification

   LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(459,7)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(473,7)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at FitnessFunc/HIFUScore/heatDiffusionScore.cc(487,7)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================
